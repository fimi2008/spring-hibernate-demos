<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- 引入prperties配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!--
		引入sessionFactory
			LocalSessionFactoryBean 既满足了hibernate的特点,也满足了spring容器的特点
	-->
	<bean class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" id="sessionFactory">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>

	<bean id="sessionFactory2" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingDirectoryLocations">
			<list>
				<!--spring 容器会去该包及子包下搜索所有的映射文件-->
				<value>classpath:hibernate</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>


	<!-- 引入dao和service层 -->
	<bean class="com.lionxxw.hibernate.twolevelcache.spring.hibernate.dao.impl.ClassesDaoImpl" id="classesDao">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>

	<bean class="com.lionxxw.hibernate.twolevelcache.spring.hibernate.service.impl.ClassesServiceImpl" id="classesService">
		<property name="classesDao">
			<ref bean="classesDao"/>
		</property>
	</bean>

	<!--事务管理器-->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean>
	<tx:advice id="tx" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*"/>
		</tx:attributes>
	</tx:advice>

	<!-- 进行aop配置 -->
	<aop:config>
		<aop:pointcut id="perform" expression="execution(* com.lionxxw.spring.hibernate.service.impl.*.*(..))"/>
		<aop:advisor advice-ref="tx" pointcut-ref="perform"/>
	</aop:config>

	<!-- 引入自定义回调配置 -->
	<import resource="applicationContext-callback.xml"/>
</beans>